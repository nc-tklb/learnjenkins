//Pipeline template for user creation


//sets days and numbers to keep. Defaults to -1
daysToKeep="-1"
numToKeep="-1"
if(true)
    daysToKeep = "100"
if(true)
    numToKeep = "100"
ppolicydescription="Skal der auto-genereres et password? Alternativt skal der indtastes et password herunder."
if("null"=="EN")
    ppolicydescription="Should a password be generated automatically? Alternatively, a password must be entered below."

pipeline {
    agent any
    options{
        buildDiscarder(logRotator(daysToKeepStr: daysToKeep, numToKeepStr: numToKeep))
    }

    parameters {
        /*if(null != null){
            for (Map passwordparam : data.params.passwordparams){
                password(name: "${passwordparam.name}",description: "passwordparam.description")
            }
        }*/
        string(name: "Brugernavn", description: "")
        string(name: "Fornavn", description: "")
        string(name: "Efternavn", description: "")
        string(name: "Email", description: "")

        choice(name: "Password Policy", choices: choiceString("[user, system]"), description: ppolicydescription)
    }
    tools {
        gradle 'gradle-latest'
    }
    environment {
        swag="swug"
    }
    stages {
        stage ('Initialize') {
            steps {
                script{
                    currentBuild.rawBuild.project.description = "Opretter en administrator, som kan have sudo rettigheder."
                }
                echo "Working Directory:"
                sh 'pwd'
            }
        }
        stage ('print test values') {
            steps {
                echo "days from this script: " + daysToKeep
                echo "days from YML: 100"
                echo "num from this script: " + numToKeep
                echo "num from YML: 100"
            }
        }
        stage('environment variables'){
            steps{
                echo swag
            }
        }
    }
}

//splits a list from the yml into a string that is readable by the jenkins pipeline choice parameter.
String choiceString(String input){
    def inputlist = makeList(input)
    def output = ''
    inputlist.each{
        output += it + '\n'
    }
    return output
}
String[] makeList(String input){
    return ((input).replaceAll(/[\[\]]+/, "")).split(', ')
}
